{% extends 'base.html.twig' %}

{% block title %}Chat{% endblock %}

{% block content %}
<div class="container">
    {% if app.user %}
        <div class="mb-3">
            You are logged in as {{ app.user.username }}, <a href="{{ path('app_logout') }}">Logout</a>
        </div>
    {% endif %}
    <h1>Channel {{ channel.name }}</h1>
    <div class="container" style="height: 600px">
        <div class="container bg-light h-75 overflow-auto">
            {% for message in messages %}
                {% if app.user == message.author %}
                    <div class="row w-75 float-right">
                        <b>{{ message.author.username }}</b>
                        <p class="alert alert-info w-100">
                            {{ message.content }}
                        </p>
                    </div>
                {% else %}
                    <div class="row w-75 float-left">
                        <b>{{ message.author.username }}</b>
                        <p class="alert alert-success w-100">
                            {{ message.content }}
                        </p>
                    </div>
                {% endif %}
            {% endfor %}
        </div>
        <div>
            <form id="form" class="container row"> 
                <input id="message" class="input-group-text col-sm-9" placeholder="Message" type="text" />
                <button id="submit" type="submit" class="btn btn-success col-sm-3">Send</button>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts_footer %}

<script>
// The subscriber subscribes to updates for the https://example.com/users/dunglas topic
// and to any topic matching https://example.com/books/{id}
const url = new URL('http://localhost:3000/.well-known/mercure');
url.searchParams.append('topic', 'http://localhost:8080/chat/{{ channel.id }}');
//url.searchParams.append('topic', 'http://localhost:8080/message');
// The URL class is a convenient way to generate URLs such as https://localhost/.well-known/mercure?topic=https://example.com/books/{id}&topic=https://example.com/users/dunglas

const eventSource = new EventSource(url, {
    headers: {
        'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJtZXJjdXJlIjp7InB1Ymxpc2giOlsiKiJdLCJzdWJzY3JpYmUiOlsiKiJdfX0.4DUMumRBcwown63lKUecQcFxGAr8Dg2vwpSuKfAoKcs',
    }
});

eventSource.onmessage = event => {
    console.log(JSON.parse(event.data));
}

      const form = document.getElementById('form');
      console.log(form);
       

        form.addEventListener('submit', handleForm);
        function handleForm(e) {
            e.preventDefault(); // Empêche la page de se rafraîchir après le submit du formulaire
        }
        const submit = document.querySelector('button');
        submit.onclick = e => { // On change le comportement du submit
            const message = document.getElementById('message'); // Récupération du message dans l'input correspondant
            const data = { // La variable data sera envoyée au controller
                'content': message.value, // On transmet le message...
                'channel': {{ channel.id }} // ... Et le canal correspondant
            }
            console.log(data); // Pour vérifier vos informations
            fetch('/chat/{id}', { // On envoie avec un post nos datas sur le endpoint /message de notre application
                method: 'POST',
                body: JSON.stringify(data) // On envoie les data sous format JSON
            }).then((response) => {
                message.value = '';
                console.log(response);
            });
        }


 window.addEventListener('beforeunload', function(){
        if(eventSource != null){
            eventSource.close()
        }
    })

</script>

{% endblock %}